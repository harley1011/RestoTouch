swagger: "2.0"
info:
  version: "0.0.1"
  title: RestoTouch
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /placeOrder:
    x-swagger-router-controller: order
    post:
      # used as the method name of the controller
      operationId: placeOrder
      description: Places an order 
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PlaceOrderResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - name: order
          description: order properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/Order"
  /retrieveCompletedOrders/{restaurantId}:
    x-swagger-router-controller: order
    get:
      # used as the method name of the controller
      parameters:
        - name: restaurantId
          type: number
          in: path
          required: true
      operationId: retrieveCompletedOrders
      description: Retrieves completed restaurants orders
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrdersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /retrieveCompletedOrder/{orderId}:
    x-swagger-router-controller: order
    get:
      # used as the method name of the controller
      parameters:
        - name: orderId
          type: number
          in: path
          required: true
      operationId: retrieveCompletedOrder
      description: Retrieves a completed restaurants order
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Order"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /retrieveOrders/{restaurantId}:
    x-swagger-router-controller: order
    get:
      # used as the method name of the controller
      parameters:
        - name: restaurantId
          type: number
          in: path
          required: true
      operationId: retrieveOrders
      description: Retrieves restaurants orders
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrdersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /s3ImageUploadUrl:
    x-swagger-router-controller: s3File
    get:
      # used as the method name of the controller
      operationId: getS3UploadImageKey
      description: Returns an upload url for an image
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/S3ImageUploadResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
      - name: imageName
        in: query
        description: name of image
        required: true
        type: string
        format: string
      - name: imageType
        in: query
        description: type of image
        required: true
        type: string
        format: string
  /item:
     # binds a127 app logic to a route
    x-swagger-router-controller: item
    get:
      # used as the method name of the controller
      operationId: getAllItems
      description: Returns the list of items
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ItemsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addItem
      description: Add a item
      parameters:
        - name: item
          description: item properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /item/{id}:
    x-swagger-router-controller: item
    get:
      description: Returns a specific item
      operationId: getItem
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a item
      # used as the method name of the controller
      operationId: updateItem
      parameters:
        - name: id
          type: number
          in: path
          required: true
        - name: category
          description: Category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes an item
      # used as the method name of the controller
      operationId: deleteItem
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # -----------------------------------------/// Category ///
  /category:
     # binds a127 app logic to a route
    x-swagger-router-controller: category
    get:
      # used as the method name of the controller
      operationId: getAllCategories
      description: Returns the list of categories
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CategoriesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addCategory
      description: Add a category
      parameters:
        - name: category
          description: category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /category/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: category
    get:
      description: Returns a specific category
      # used as the method name of the controller
      operationId: getCategory
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Category"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a category
      # used as the method name of the controller
      operationId: updateCategory
      parameters:
        - name: id
          type: number
          in: path
          required: true
        - name: category
          description: Category properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a category
      # used as the method name of the controller
      operationId: deleteCategory
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
   # -----------------------------------------/// Combo ///
  /combo:
     # binds a127 app logic to a route
    x-swagger-router-controller: combo
    get:
      # used as the method name of the controller
      operationId: getAllCombos
      description: Returns the list of combos
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CombosResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addCombo
      description: Add a combo
      parameters:
        - name: combo
          description: combo properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Combo"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /combo/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: combo
    get:
      description: Returns a specific combo
      # used as the method name of the controller
      operationId: getCombo
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Combo"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a combo
      # used as the method name of the controller
      operationId: updateCombo
      parameters:
        - name: id
          type: number
          in: path
          required: true
        - name: combo
          description: Combo properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Combo"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a combo
      # used as the method name of the controller
      operationId: deleteCombo
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  # -----------------------------------------/// Restaurant ///
  /restaurant:
    # binds a127 app logic to a route
    x-swagger-router-controller: restaurant
    get:
      description: Returns the list of restaurants
      # used as the method name of the controller
      operationId: getAll
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/RestaurantListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: save
      description: Add a restaurant
      # movie info to be stored
      parameters:
        - name: restaurant
          description: Restaurant properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Restaurant"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurant/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: restaurant
    get:
      description: Returns a specific restaurant
      # used as the method name of the controller
      operationId: get
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Restaurant"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a restaurant
      # used as the method name of the controller
      operationId: update
      parameters:
        - name: id
          type: number
          in: path
          required: true
        - name: restaurant
          description: Restaurant properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Restaurant"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a restaurant
      # used as the method name of the controller
      operationId: del
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /menu:
    # binds a127 app logic to a route
    x-swagger-router-controller: menu
    get:
      description: Returns the list of menus
      # used as the method name of the controller
      operationId: getAllMenu
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MenuListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: saveMenu
      description: Add a menu
      # menu info to be stored
      parameters:
        - name: restaurant
          description: Menu properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Menu"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /menu/{menuId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: menu
    get:
      description: Returns a specific menu
      # used as the method name of the controller
      operationId: getMenu
      parameters:
        - name: menuId
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Menu"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a menu
      # used as the method name of the controller
      operationId: updateMenu
      parameters:
        - name: menuId
          type: number
          in: path
          required: true
        - name: menu
          description: Menu properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Menu"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a menu
      # used as the method name of the controller
      operationId: delMenu
      parameters:
        - name: menuId
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurantMenu:
    # binds a127 app logic to a route
    x-swagger-router-controller: restaurantMenu
    post:
      operationId: saveRestaurantMenu
      description: Add a restaurant menu
      # menu info to be stored
      parameters:
        - name: restaurantmenu
          description: Restaurant Menu relation
          in: body
          required: true
          schema:
            $ref: "#/definitions/RestaurantMenu"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurantMenu/{restaurantId}{menuId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: restaurantMenu
    ############
    # ATTENTION !
    # Don't why the doc BELOW is needed, it causing errors so I commented it out!
    #put:
      #description: Updates a restaurant
       #used as the method name of the controller
      #operationId: update
      #parameters:
       #- name: name
          #type: string
          #in: path
          #required: true
        #- name: restaurant
          #description: Restaurant properties
          #in: body
          #required: true
          #schema:
            #$ref: "#/definitions/Restaurant"
      #responses:
        #"200":
          #description: Success
          #schema:
            # a pointer to a definition
            #$ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        #default:
          #description: Error
          #schema:
            #$ref: "#/definitions/ErrorResponse"
    # ATTENTION !
    # Don't why the doc ABOVE is needed, it causing errors so I commented it out!
    ###########
    delete:
      description: Deletes a Restaurant Menu relation
      # used as the method name of the controller
      operationId: delRestaurantMenu
      parameters:
        - name: restaurantId
          description: Restaurant Id
          type: number
          in: path
          required: true
        - name: menuId
          description: Menu Id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /menuCategory:
    # binds a127 app logic to a route
    x-swagger-router-controller: menuCategory
    post:
      operationId: saveMenuCategory
      description: Add a category to menu
      # menu info to be stored
      parameters:
        - name: menucategory
          description: Menu Category relation
          in: body
          required: true
          schema:
            $ref: "#/definitions/MenuCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /menuCategory/{menuId}{categoryId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: menuCategory
    delete:
      description: Deletes a Category in Menu
      # used as the method name of the controller
      operationId: delMenuCategory
      parameters:
        - name: menuId
          description: a Menu Id
          type: number
          in: path
          required: true
        - name: categoryId
          description: a Category Id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  # -----------------------------------------/// Register ///
  /register:
    x-swagger-router-controller: account
    post:
      operationId: register
      description: Register a new user
      # movie info to be stored
      parameters:
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # -----------------------------------------/// Login ///
  /login:
    x-swagger-router-controller: account
    post:
      operationId: login
      description: Authenticate an existing user

      parameters:
        - name: auth
          description: User credentials
          in: body
          required: true
          schema:
            $ref: "#/definitions/Auth"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /supportedLanguages:
    x-swagger-router-controller: account
    get:
      operationId: getSupportedLanguages
      description: Get the users supported languages
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SupportedLanguagesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /supportedLanguage:
    x-swagger-router-controller: account
    put:
      operationId: saveNewSupportedLanguage
      description: Save the supported language to the users account
      parameters:
        - name: supportedLanguage
          description: Language to save to the users account
          in: body
          required: true
          schema:
            $ref: "#/definitions/Language"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"         
         
  /accountSettings:
    x-swagger-router-controller: account
    put:
      operationId: saveAccountSettings
      description: Get the users account settings
      parameters:
        - name: accountSettings
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/AccountSettings"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getAccountSettings
      description: Get the users account settings
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountSettings"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /profile:
    x-swagger-router-controller: account
    put:
      operationId: saveProfile
      description: Save the user's profile settings
      parameters:
        - name: profile
          description: User information
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getProfile
      description: Get the user's account information
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      passwordConfirm:
        type: string
      isEmployee:
        type: boolean
      employeePassword:
        type: string
    required:
      - firstName
      - lastName
      - email
  S3ImageUploadResponse:
    type: object
    properties:
      signedRequest:
        type: string
      url:
        type: string
    required:
        - signedRequest
        - url
  Auth:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
        - email
        - password
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
    required:
      - success
      - description
  PlaceOrderResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
      orderId:
        type: string
    required:
      - success
      - description
  OrdersResponse:
    required:
      - orders
    properties:
      orders:
        type: array
        items:
          "$ref": "#/definitions/Order"
  CategoriesResponse:
    required:
      - categories
    properties:
      # Array of category
      categories:
        type: array
        items:
          "$ref": "#/definitions/Category"
  Category:
    type: object
    properties:
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
      translations:
        type: array
        items:
          "$ref": "#/definitions/CategoryTranslations"
      items:
        type: array
        items:
          "$ref": "#/definitions/Item"
  CategoryTranslations:
    type: object
    properties:
      name:
        type: string
      languageCode:
        type: string
    required:
      - name
      - languageCode
      ################################################## Combo
  CombosResponse:
    required:
      - combos
    properties:
      # Array of combo
      combos:
        type: array
        items:
          "$ref": "#/definitions/Combo"
  Combo:
    type: object
    properties:
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
      translations:
        type: array
        items:
          "$ref": "#/definitions/ComboTranslations"
      categories:
        type: array
        items:
          "$ref": "#/definitions/Category"
#      items:
#        type: array
#        items:
#          "$ref": "#/definitions/Item"
  ComboTranslations:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      languageCode:
        type: string
      discountValue:
        type: number
      discountFlag:
        type: string
    required:
      - name
      - description
      - languageCode
      - discountValue
      - discountFlag
      ###################################################
  ItemsResponse:
    required:
      - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Item"
  Order:
    properties:
      total:
        type: number
      orderedItems:
        type: array
        items:
          "$ref": "#/definitions/OrderedItem"
      paymentId:
        type: string
  OrderedItem:
    required:
      - item
      - sizes
    properties:
      item:
       "$ref": "#/definitions/Item"
      sizes:
        type: array
        items:
          "$ref": "#/definitions/OrderSize"
  OrderSize:
    required:
      - size
      - quantity
    properties:
      size:
          "$ref": "#/definitions/ItemSize"
      quantity:
          type: number
  Item:
    type: object
    properties:
      imageUrl:
        type: string
      itemSizes:
        type: array
        items:
          "$ref": "#/definitions/ItemSize"
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
      translations:
        type: array
        items:
          "$ref": "#/definitions/ItemTranslations"
      ingredientGroup:
        type: array
        items:
          "$ref": "#/definitions/IngredientGroup"
      #categories:
        #type: array
        #items:
          #"$ref": "#/definitions/Category"
    required:
      - imageUrl
  Ingredient:
    type: object
    properties:
      name:
        type: string
      price:
        type: number
      allowQuantity:
        type: number
    required:
      - name
  IngredientGroup:
    type: object
    properties:
      name:
        type: string
      numberOfIngredientsAllowed:
        type: number
      allowQuantity:
        type: number
      ingredients:
        type: array
        items:
          "$ref": "#/definitions/Ingredient"
    required:
      - name
  ItemSize:
    type: object
    properties:
      name:
        type: string
      price:
        type: number
    required:
      - name
      - price
  ItemTranslations:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      languageCode:
        type: string
    required:
      - name
      - description
      - languageCode
  RestaurantListResponse:
    required:
      - restaurants
    properties:
      # The array of restaurants
      restaurants:
        type: array
        items:
          "$ref": "#/definitions/Restaurant"
  Language:
    type: object
    properties:
      code:
        type: string
  SupportedLanguagesResponse:
    required:
      - supportedLanguages
    properties:
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
  RestaurantTranslations:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      languageCode:
        type: string
    required:
      - name
      - description
      - languageCode
  MenuTranslations:
    type: object
    properties:
      name:
        type: string
      languageCode:
        type: string
    required:
      - name
      - languageCode
  BusinessHour:
    type: object
    properties:
      day:
        type: number
      shift:
        type: number
      openTime:
        type: string
      closeTime:
        type: string
      active:
        type: boolean
    required:
      - day
      - shift
      - openTime
      - closeTime
      - active
  Payment:
    type: object
    properties:
      name:
        type: string
      used:
        type: boolean
    required:
      - name
      - used
  AccountSettings:
    type: object
    properties:
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
  Restaurant:
    type: object
    properties:
      address:
        type: string
      paypalId:
        type: string
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
      translations:
        type: array
        items:
          "$ref": "#/definitions/RestaurantTranslations"
      businessHours:
        type: array
        items:
          "$ref": "#/definitions/BusinessHour"
      payments:
        type: array
        items:
          "$ref": "#/definitions/Payment"
      kitCashModeFlag:
        type: string
    required:
      - address
  MenuListResponse:
    required:
      - menus
    properties:
      # The array of menus
      menus:
        type: array
        items:
          "$ref": "#/definitions/Menu"
  Menu:
    type: object
    properties:
      supportedLanguages:
        type: array
        items:
          "$ref": "#/definitions/Language"
      translations:
        type: array
        items:
          "$ref": "#/definitions/MenuTranslations"
  RestaurantMenu:
    type: object
    properties:
      restaurantId:
        type: number
      menuId:
        type: number
    required:
      - restaurantId
      - menuId
  MenuCategory:
    type: object
    properties:
      menuId:
        type: number
      categoryId:
        type: number
      order:
        type: number
    required:
      - menuId
      - categoryId
      - order
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
